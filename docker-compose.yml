version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "inventoryTrack:1:1,purchaseOrder:1:1,shippingOrder:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - kafka-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.18
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - kafka-network
    depends_on:
      - elasticsearch

  mongo:
    image: mongo:latest
    container_name: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - kafka-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    hostname: sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "P@ssw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - kafka-network

  webapi:
    build: /home/threading/DistributedSystem Assisment/POContext
    container_name: pocontext-container
    hostname: pocontext
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PurchaseOrderDB=Server=sqlserver,1433;Database=PurchaseOrders;User Id=sa;Password=P@ssw0rd;Encrypt=False;TrustServerCertificate=True;
      - ProducerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__GroupId=Po_Consumer
      - ConsumerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__EnableAutoCommit=false
      - ConsumerConfig__AutoOffsetReset=Earliest
      - ConsumerConfig__AllowAutoCreateTopic=true
      - MongoConfig__DatabaseName=ERPEventStore
      - MongoConfig__CollectionName=PurchaseOrder
      - MongoConfig__ConnectionString=mongodb://admin:password@mongo:27017
      - Topic__TopicName=purchaseOrder
      - ElkLog__ConnectionString=http://elasticsearch:9200
      - Redis__Connection=redis:6379
    depends_on:
      - kafka
      - sqlserver
      - redis
      - elasticsearch
    networks:
      - kafka-network

  webapi2:
    build: /home/threading/DistributedSystem Assisment/Shipping
    container_name: shipping-container
    hostname: shipping
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8082
      - ConnectionStrings__ShippingOrder=Server=sqlserver,1433;Database=ShippingOrder;User Id=sa;Password=P@ssw0rd;Encrypt=False;TrustServerCertificate=True;
      - ProducerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__GroupId=PoShipment_Consumer
      - ConsumerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__EnableAutoCommit=false
      - ConsumerConfig__AutoOffsetReset=Earliest
      - ConsumerConfig__AllowAutoCreateTopic=true
      - MongoConfig__DatabaseName=ERPEventStore
      - MongoConfig__CollectionName=ShippingOrder
      - MongoConfig__ConnectionString=mongodb://admin:password@mongo:27017
      - TopicShippingOrders__TopicName=shippingOrder
      - Topic__TopicName=purchaseOrder
      - PurchaseOrderGraphQLEndpoint__EndPoint=http://pocontext:8080/graphql
      - ElkLog__ConnectionString=http://elasticsearch:9200
    depends_on:
      - kafka
      - sqlserver
      - elasticsearch
    networks:
      - kafka-network

  webapi3:
    build: /home/threading/DistributedSystem Assisment/InventoryContext
    container_name: inventory-container
    hostname: inventory
    ports:
      - "8084:8084"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8084
      - ConnectionStrings__Inventory=Server=sqlserver,1433;Database=InventoryDb;User Id=sa;Password=P@ssw0rd;Encrypt=False;TrustServerCertificate=True;
      - ProducerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__GroupId=Inventory_Consumer
      - ConsumerConfig__BootstrapServers=kafka:9093
      - ConsumerConfig__EnableAutoCommit=false
      - ConsumerConfig__AutoOffsetReset=Earliest
      - ConsumerConfig__AllowAutoCreateTopic=true
      - MongoConfig__DatabaseName=ERPEventStore
      - MongoConfig__CollectionName=InventoryTransaction
      - MongoConfig__ConnectionString=mongodb://admin:password@mongo:27017
      - Topic__TopicName=inventoryTrack
      - ElkLog__ConnectionString=http://elasticsearch:9200
    depends_on:
      - kafka
      - sqlserver
      - elasticsearch
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
